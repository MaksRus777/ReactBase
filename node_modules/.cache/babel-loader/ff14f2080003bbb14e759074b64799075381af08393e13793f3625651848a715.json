{"ast":null,"code":"var _jsxFileName = \"/home/maks/Desktop/react_2/my_app/src/app.js\";\nimport React from 'react';\nimport Header from './components/header';\nimport Users from './components/users';\nimport AddUser from './components/adduser';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"https://reqres.in/api/users?page=1\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    axios.get(baseUrl).then(res => {\n      console.log(res.data.data);\n    }); /*обращаемся по определенному адресу, получаем оттуда данные,после этого выполнится метод then  */\n\n    this.state = {\n      users: [{\n        id: 1,\n        firstname: 'Bob',\n        lastname: 'Marley',\n        bio: 'Lorem aacadcczc',\n        age: 40,\n        isHappy: true\n      }, {\n        id: 2,\n        firstname: 'John',\n        lastname: 'Doe',\n        bio: 'Loremac fasvvsvsvsdvsvsv',\n        age: 22,\n        isHappy: false\n      }]\n    };\n    this.addUser = this.addUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.editUser = this.editUser.bind(this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        name: \"\\u0428\\u0430\\u043F\\u043A\\u0430 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(Users, {\n          users: this.state.users,\n          onEdit: this.editUser,\n          onDelete: this.deleteUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: /*#__PURE__*/_jsxDEV(AddUser, {\n          onAdd: this.addUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this);\n  }\n  deleteUser(id) {\n    this.setState({\n      users: this.state.users.filter(el => el.id !== id)\n    });\n  }\n\n  /*editUser передается вместе с addUser пошагово через компоненты в компонент  addUser по нахванию onAdd, таким образом одно нажатие\n  на кнопку \"добавить\"  реализует сразу два созданых мной метода*, это и есть props*/\n  editUser(user) {\n    let allUsers = this.state.users; /*получили всех пользователей*/\n    allUsers[user.id - 1] = user; /*нашли нужного пользователя и сохранили в allUsers*/\n\n    this.setState({\n      users: []\n    } /*удаляем пользователей*/,\n    /* функция будет выполнена после \n    выполнения предидущего кусочка кода*/\n    () => {\n      this.setState({\n        users: [...allUsers]\n      }); /*замена состояния обновленным allUsers*/\n    });\n  }\n  addUser(user) {\n    const id = this.state.users.length + 1;\n    this.setState({\n      users: [...this.state.users, {\n        id,\n        ...user\n      }]\n    });\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Header","Users","AddUser","axios","jsxDEV","_jsxDEV","baseUrl","App","Component","constructor","props","get","then","res","console","log","data","state","users","id","firstname","lastname","bio","age","isHappy","addUser","bind","deleteUser","editUser","render","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","onAdd","setState","filter","el","user","allUsers","length"],"sources":["/home/maks/Desktop/react_2/my_app/src/app.js"],"sourcesContent":["import React from 'react';\nimport Header from './components/header'\nimport Users from './components/users'\nimport AddUser from './components/adduser'\nimport axios from \"axios\"\nconst baseUrl = \"https://reqres.in/api/users?page=1\"\n\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n\n        axios.get(baseUrl).then((res)=>{\n            console.log(res.data.data)\n        })/*обращаемся по определенному адресу, получаем оттуда данные,после этого выполнится метод then  */\n\n        this.state = {\n            users:[{id:1,\n                firstname:'Bob',\n                lastname:'Marley',\n                bio:'Lorem aacadcczc',\n                age: 40,\n                isHappy:true\n                },\n        \n                {id:2,\n                firstname:'John',\n                lastname:'Doe',\n                bio:'Loremac fasvvsvsvsdvsvsv',\n                age: 22,\n                isHappy:false\n                }]\n        }\n        this.addUser = this.addUser.bind(this)\n        this.deleteUser = this.deleteUser.bind(this)\n        this.editUser = this.editUser.bind(this)\n\n\n    }\n\n    render() {\n    return( \n    <div>\n        <Header name=\"Шапка профиля\"/> \n        <main>\n            <Users users={this.state.users} onEdit={this.editUser} onDelete={this.deleteUser}/>  {/* мы передаем метод onDelete со значением deleteUser в компонент User,которое является функцией */}\n        </main>     \n        <aside>\n            <AddUser onAdd={this.addUser}/>\n        </aside>\n\n        \n    </div>\n    )    \n    }\n    deleteUser(id) {\n        this.setState({\n            users: this.state.users.filter((el)=> el.id !== id)\n        })\n    }\n\n    \n    /*editUser передается вместе с addUser пошагово через компоненты в компонент  addUser по нахванию onAdd, таким образом одно нажатие\n    на кнопку \"добавить\"  реализует сразу два созданых мной метода*, это и есть props*/\n    editUser(user){\n        let allUsers = this.state.users /*получили всех пользователей*/\n        allUsers[user.id - 1]=user /*нашли нужного пользователя и сохранили в allUsers*/ \n\n        this.setState({users:[]}/*удаляем пользователей*/ ,/* функция будет выполнена после \n            выполнения предидущего кусочка кода*/() => {\n                this.setState({users:[...allUsers]}) /*замена состояния обновленным allUsers*/\n            } )\n    }\n    addUser(user){\n        const id = this.state.users.length + 1\n        this.setState({users:[...this.state.users,{id, ...user}]})\n    }\n\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}